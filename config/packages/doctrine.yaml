parameters:
    # Adds a fallback DATABASE_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(DATABASE_URL): ''
#    database_host:     localhost
#    database_port:     ~
#    database_name:     symfony
#    database_user:     root
#    database_password: ~

doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                server_version: "5.5"
                driver:   pdo_mysql
#                host:     qa.mysql.rmmapi
#                port:     3306
#                dbname:   rmmapi
#                user:     root
#                password: '%env(DATABASE_PASSWORD)%'
                charset:  UTF8
                url: '%env(DATABASE_URL)%'

            tenant:
                server_version: "5.5"
                driver:   pdo_mysql
#                host:     '%database_host%'
                port:     3306
                dbname:   ~
                user:     ~
                password: ~
                wrapper_class: App\Multi\Connection\Wrapper
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: default

        entity_managers:
            default:
                auto_mapping:     false # disabled so we can assign entities to our own connections
                connection:       default
                mappings:
                    Multi:
                        type:       annotation
                        mapping:    true
                        dir:        '%kernel.root_dir%/../src/Multi/Entity'
                        prefix:     App\Multi\Entity
                        is_bundle:  false

            tenant:
                auto_mapping:     false # disabled so we can assign entities to our own connections
                naming_strategy:  doctrine.orm.naming_strategy.underscore
                connection:       tenant
                mappings:
                    Api:
                        type:       annotation
                        mapping:    true
                        dir:        '%kernel.root_dir%/../src/Api/Entity'
                        prefix:     App\Api\Entity
                        is_bundle:  false
                        alias:      Api

                dql:
                    string_functions:
                        JSON_EXTRACT: Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mysql\JsonExtract
                        JSON_SEARCH: Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mysql\JsonSearch
                        JSON_CONTAINS: Scienta\DoctrineJsonFunctions\Query\AST\Functions\Mysql\JsonContains
